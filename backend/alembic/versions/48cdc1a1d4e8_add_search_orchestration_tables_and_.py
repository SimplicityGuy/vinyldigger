"""Add search orchestration tables and fields

Revision ID: 48cdc1a1d4e8
Revises: initial
Create Date: 2025-07-18 00:36:29.635744

"""

from collections.abc import Sequence

import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision: str = "48cdc1a1d4e8"
down_revision: str | None = "initial"
branch_labels: str | Sequence[str] | None = None
depends_on: str | Sequence[str] | None = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "search_budgets",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("monthly_limit", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("current_spent", sa.Numeric(precision=10, scale=2), nullable=False),
        sa.Column("period_start", sa.DateTime(timezone=True), nullable=False),
        sa.Column("period_end", sa.DateTime(timezone=True), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "search_chains",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("user_id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(length=500), nullable=True),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "search_templates",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("name", sa.String(length=255), nullable=False),
        sa.Column("description", sa.String(length=500), nullable=False),
        sa.Column("category", sa.String(length=100), nullable=False),
        sa.Column("template_data", sa.JSON(), nullable=False),
        sa.Column("is_public", sa.Boolean(), nullable=False),
        sa.Column("created_by", sa.UUID(), nullable=True),
        sa.Column("usage_count", sa.Integer(), nullable=False),
        sa.Column("parameters", sa.JSON(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["created_by"],
            ["users.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_table(
        "search_chain_links",
        sa.Column("id", sa.UUID(), nullable=False),
        sa.Column("chain_id", sa.UUID(), nullable=False),
        sa.Column("search_id", sa.UUID(), nullable=False),
        sa.Column("order_index", sa.Integer(), nullable=False),
        sa.Column("trigger_condition", sa.JSON(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(
            ["chain_id"],
            ["search_chains.id"],
        ),
        sa.ForeignKeyConstraint(
            ["search_id"],
            ["saved_searches.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
    )
    op.add_column("saved_searches", sa.Column("depends_on_search", sa.UUID(), nullable=True))
    op.add_column("saved_searches", sa.Column("trigger_conditions", sa.JSON(), nullable=False, server_default="{}"))
    op.add_column("saved_searches", sa.Column("budget_id", sa.UUID(), nullable=True))
    op.add_column(
        "saved_searches",
        sa.Column(
            "estimated_cost_per_result",
            sa.Numeric(precision=5, scale=2),
            nullable=False,
            server_default="0.10",
        ),
    )
    op.add_column("saved_searches", sa.Column("optimal_run_times", sa.JSON(), nullable=False, server_default="[]"))
    op.add_column("saved_searches", sa.Column("avoid_run_times", sa.JSON(), nullable=False, server_default="[]"))
    op.add_column("saved_searches", sa.Column("priority_level", sa.Integer(), nullable=False, server_default="5"))
    op.create_foreign_key(None, "saved_searches", "search_budgets", ["budget_id"], ["id"])
    op.create_foreign_key(None, "saved_searches", "saved_searches", ["depends_on_search"], ["id"])
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_constraint("saved_searches_budget_id_fkey", "saved_searches", type_="foreignkey")
    op.drop_constraint("saved_searches_depends_on_search_fkey", "saved_searches", type_="foreignkey")
    op.drop_column("saved_searches", "priority_level")
    op.drop_column("saved_searches", "avoid_run_times")
    op.drop_column("saved_searches", "optimal_run_times")
    op.drop_column("saved_searches", "estimated_cost_per_result")
    op.drop_column("saved_searches", "budget_id")
    op.drop_column("saved_searches", "trigger_conditions")
    op.drop_column("saved_searches", "depends_on_search")
    op.drop_table("search_chain_links")
    op.drop_table("search_templates")
    op.drop_table("search_chains")
    op.drop_table("search_budgets")
    # ### end Alembic commands ###
