[project]
name = "vinyldigger-backend"
version = "0.1.0"
description = "Backend API for VinylDigger - vinyl record discovery tool"
requires-python = ">=3.13"
dependencies = [
    "fastapi>=0.115.0",
    "uvicorn[standard]>=0.31.0",
    "pydantic>=2.9.0",
    "pydantic-settings>=2.5.0",
    "sqlalchemy>=2.0.35",
    "alembic>=1.13.3",
    "asyncpg>=0.30.0",
    "redis>=5.1.1",
    "celery>=5.4.0",
    "httpx>=0.27.2",
    "python-jose[cryptography]>=3.3.0",
    "passlib[bcrypt]>=1.7.4",
    "python-multipart>=0.0.12",
    "apscheduler>=3.10.4",
    "cryptography>=43.0.3",
    "email-validator>=2.2.0",
]

[project.optional-dependencies]
dev = [
    "pytest>=8.3.3",
    "pytest-cov>=5.0.0",
    "pytest-asyncio>=0.24.0",
    "pytest-mock>=3.14.0",
    "ruff>=0.7.4",
    "mypy>=1.13.0",
    "types-redis>=4.6.0.20241004",
    "types-passlib>=1.7.7.20240819",
    "sqlalchemy[mypy]>=2.0.35",
    "faker>=30.8.2",
    "pytest-httpx>=0.30.0",
    "factory-boy>=3.3.1",
    "aiosqlite>=0.20.0",
    "greenlet>=3.1.1",
    "types-python-jose>=3.3.0.20241014",
]

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"

[tool.hatch.build.targets.wheel]
packages = ["src"]

[tool.taskipy.tasks]
dev = "uvicorn src.main:app --reload --host 0.0.0.0 --port 8000"
test = "pytest"
test-cov = "pytest --cov=src --cov-report=html --cov-report=term"
lint = "ruff check ."
format = "ruff format ."
typecheck = "mypy ."
migrate = "alembic upgrade head"
makemigrations = "alembic revision --autogenerate"
worker = "celery -A src.workers.celery_app worker --loglevel=info"
scheduler = "python -m src.workers.scheduler"

[tool.ruff]
target-version = "py312"
line-length = 88
fix = true

[tool.ruff.lint]
select = [
    "E",  # pycodestyle errors
    "W",  # pycodestyle warnings
    "F",  # pyflakes
    "I",  # isort
    "B",  # flake8-bugbear
    "C4", # flake8-comprehensions
    "UP", # pyupgrade
]
ignore = ["B008"]

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.mypy]
python_version = "3.12"
strict = true
warn_return_any = true
warn_unused_configs = true
no_implicit_reexport = true
namespace_packages = true
exclude = ["alembic/", "tests/"]
plugins = ["sqlalchemy.ext.mypy.plugin"]

[tool.pytest.ini_options]
testpaths = ["tests"]
pythonpath = ["."]
asyncio_mode = "auto"
addopts = "-v --strict-markers --tb=short"
markers = [
    "unit: Unit tests",
    "integration: Integration tests",
    "e2e: End-to-end tests",
]

[tool.coverage.run]
source = ["src"]
omit = ["*/tests/*", "*/alembic/*"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if __name__ == .__main__.:",
    "raise NotImplementedError",
    "pass",
    "except ImportError:",
]
