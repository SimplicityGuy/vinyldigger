# Test environment configuration
#
# Usage:
# - Run backend tests: docker-compose -f docker-compose.test.yml run --rm backend-test
# - Run services for e2e tests: docker-compose -f docker-compose.test.yml up -d
# - Run all tests with just: just test

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_USER: test
      POSTGRES_PASSWORD: test
      POSTGRES_DB: vinyldigger_test
    ports:
      - "5432:5432"
    tmpfs:
      - /var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U test -d vinyldigger_test"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  redis:
    image: redis:7-alpine
    ports:
      - "6379:6379"
    tmpfs:
      - /data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 10
      start_period: 10s

  # Backend service for running the API (used by e2e tests)
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql+asyncpg://test:test@postgres:5432/vinyldigger_test
      REDIS_URL: redis://redis:6379
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      SECRET_KEY: test-secret-key-for-testing
      DEBUG: "true"
      CORS_ORIGINS: '["http://localhost:3000", "http://localhost:8000"]'
    ports:
      - "8000:8000"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    user: root
    command: >
      sh -c "uv pip install --system -e . &&
             alembic upgrade head &&
             su -c 'uvicorn src.main:app --host 0.0.0.0 --port 8000 --reload' appuser"
    volumes:
      - ./backend:/app
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 5s
      timeout: 5s
      retries: 15
      start_period: 30s

  # Backend test runner (for unit/integration tests)
  backend-test:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql+asyncpg://test:test@postgres:5432/vinyldigger_test
      REDIS_URL: redis://redis:6379
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      SECRET_KEY: test-secret-key-for-testing
      DEBUG: "true"
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    user: root
    command: >
      sh -c "uv pip install --system -e '.[dev]' && su -c 'pytest -v --tb=short --cov=src --cov-report=term --cov-report=html' appuser"
    volumes:
      - ./backend:/app

  worker:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      DATABASE_URL: postgresql+asyncpg://test:test@postgres:5432/vinyldigger_test
      REDIS_URL: redis://redis:6379
      CELERY_BROKER_URL: redis://redis:6379/0
      CELERY_RESULT_BACKEND: redis://redis:6379/0
      SECRET_KEY: test-secret-key-for-testing
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      backend:
        condition: service_healthy
    user: root
    command: >
      sh -c "uv pip install --system -e . && su -c 'celery -A src.workers.celery_app worker --loglevel=info' appuser"
    volumes:
      - ./backend:/app
    healthcheck:
      test: ["CMD-SHELL", "celery -A src.workers.celery_app inspect ping -d celery@$$HOSTNAME"]
      interval: 5s
      timeout: 10s
      retries: 10
      start_period: 20s

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
      target: development
    ports:
      - "3000:3000"
    depends_on:
      backend:
        condition: service_healthy
    environment:
      - NODE_ENV=test
      - API_URL=http://backend:8000
    volumes:
      - ./frontend:/app
      - /app/node_modules
    command: >
      sh -c "npm install && npm run dev"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 5s
      timeout: 5s
      retries: 15
      start_period: 30s
