name: E2E Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]
  workflow_dispatch:

# Cancel in-progress runs when a new run is triggered
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: E2E Tests - ${{ matrix.project }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 45  # E2E matrix tests with improved timeouts, 2x safety factor

    strategy:
      fail-fast: false
      matrix:
        include:
          # Desktop browsers
          - os: ubuntu-latest
            project: chromium
          - os: ubuntu-latest
            project: firefox
          # Unfortunately the Docker step is currently not supported on macos-latest
          # - os: macos-latest
          #   project: webkit
          # # Mobile browsers
          # - os: macos-latest
          #   project: mobile-safari-iphone
          # - os: macos-latest
          #   project: mobile-safari-ipad

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'
          cache: 'npm'
          cache-dependency-path: frontend/package-lock.json

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Setup Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.13'

      - name: Install uv
        uses: astral-sh/setup-uv@e92bafb6253dcd438e0484186d7669ea7a8ca1cc # v5.0.0
        with:
          enable-cache: true

      - name: Install just
        uses: extractions/setup-just@e33e0265a09d6d736e2ee1e0eb685ef1de4669ff # v3.0.0
        with:
          just-version: '1.38.0'  # Pin to specific version for reliability

      - name: Install docker-compose
        uses: alexellis/arkade-get@1eef818e467c387d3f50cfe0d2c565d1cbe82b03 # master
        with:
          docker-compose: latest

      - name: Install dependencies
        run: just install

      - name: Install Playwright browsers
        run: |
          cd frontend
          # Map project names to actual browser names
          if [[ "${{ matrix.project }}" == "mobile-safari-iphone" ]] || [[ "${{ matrix.project }}" == "mobile-safari-ipad" ]]; then
            npx playwright install --with-deps webkit
          else
            npx playwright install --with-deps ${{ matrix.project }}
          fi

      - name: Setup test environment
        run: |
          cp backend/.env.example backend/.env
          # Update .env with test-specific values if needed
          echo "DATABASE_URL=postgresql://test:test@localhost:5432/vinyldigger_test" >> backend/.env
          echo "REDIS_URL=redis://localhost:6379/0" >> backend/.env
          echo "SECRET_KEY=test-secret-key-for-ci" >> backend/.env

      - name: Run E2E tests
        run: |
          just test-e2e-ci project=${{ matrix.project }} retries=2

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-report-${{ matrix.project }}-${{ github.run_id }}
          path: frontend/playwright-report/
          retention-days: 7

      - name: Upload test videos
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: playwright-videos-${{ matrix.project }}-${{ github.run_id }}
          path: frontend/test-results/
          retention-days: 7

      - name: Debug on failure
        if: failure()
        run: |
          echo "E2E tests failed - collecting debug information"
          ./scripts/debug-ci-failure.sh || true

      # Services cleanup is handled by test-e2e-ci command

  # Summary job to check all matrix jobs passed
  test-summary:
    name: E2E Tests Summary
    runs-on: ubuntu-latest
    timeout-minutes: 5  # Summary check typically takes < 30 sec, rounded to factor of 5
    needs: test
    if: always()

    steps:
      - name: Check test results
        run: |
          if [ "${{ needs.test.result }}" != "success" ]; then
            echo "E2E tests failed"
            exit 1
          fi
          echo "All E2E tests passed successfully"
